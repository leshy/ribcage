// Generated by CoffeeScript 1.8.0
(function() {
  var CoffeeScript, async, backbone, colors, fs, h, helpers, lego, loadSettings, logger, path, _;

  path = require('path');

  CoffeeScript = require('coffee-script');

  logger = require('logger2');

  async = require('async');

  backbone = require('backbone4000');

  colors = require('colors');

  _ = require('underscore');

  helpers = h = require('helpers');

  lego = require('lego');

  fs = require('fs');

  exports.init = function(env, callback) {
    var getVersion, loadLegos;
    if (env == null) {
      env = {};
    }
    _.extend(env, {});
    env.root = path.dirname(require.main.filename);
    env.settings = loadSettings(env.root, env.settings);
    getVersion = function(callback) {
      var gitrev;
      gitrev = require('git-rev');
      return gitrev.short(function(str) {
        env.version = str;
        return callback();
      });
    };
    loadLegos = function(callback) {
      return lego.loadLegos({
        dir: h.path(env.root, 'node_modules'),
        prefix: 'ribcage_',
        env: env
      }, callback);
    };
    return async.series([getVersion, loadLegos], function(err, data) {
      return callback(err, env);
    });
  };

  loadSettings = function(folder, settings) {
    var settingsCoffee, settingsJs;
    if (settings == null) {
      settings = {};
    }
    settingsJs = helpers.path(folder, 'settings.js');
    if (fs.existsSync(settingsCoffee = helpers.path(folder, 'settings.coffee'))) {
      fs.writeFileSync(settingsJs, CoffeeScript.compile(String(fs.readFileSync(settingsCoffee))));
    }
    console.log(settingsJs);
    if (fs.existsSync(settingsJs)) {
      _.extend(settings, require(settingsJs).settings);
    }
    return settings;
  };

}).call(this);
